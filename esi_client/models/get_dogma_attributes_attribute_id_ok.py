# coding: utf-8

"""
    EVE Swagger Interface

    An OpenAPI for EVE Online

    OpenAPI spec version: 0.4.6
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from pprint import pformat
from six import iteritems
import re


class GetDogmaAttributesAttributeIdOk(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, attribute_id=None, default_value=None, description=None, display_name=None, high_is_good=None, icon_id=None, name=None, published=None, stackable=None, unit_id=None):
        """
        GetDogmaAttributesAttributeIdOk - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'attribute_id': 'int',
            'default_value': 'float',
            'description': 'str',
            'display_name': 'str',
            'high_is_good': 'bool',
            'icon_id': 'int',
            'name': 'str',
            'published': 'bool',
            'stackable': 'bool',
            'unit_id': 'int'
        }

        self.attribute_map = {
            'attribute_id': 'attribute_id',
            'default_value': 'default_value',
            'description': 'description',
            'display_name': 'display_name',
            'high_is_good': 'high_is_good',
            'icon_id': 'icon_id',
            'name': 'name',
            'published': 'published',
            'stackable': 'stackable',
            'unit_id': 'unit_id'
        }

        self._attribute_id = attribute_id
        self._default_value = default_value
        self._description = description
        self._display_name = display_name
        self._high_is_good = high_is_good
        self._icon_id = icon_id
        self._name = name
        self._published = published
        self._stackable = stackable
        self._unit_id = unit_id

    @property
    def attribute_id(self):
        """
        Gets the attribute_id of this GetDogmaAttributesAttributeIdOk.
        attribute_id integer

        :return: The attribute_id of this GetDogmaAttributesAttributeIdOk.
        :rtype: int
        """
        return self._attribute_id

    @attribute_id.setter
    def attribute_id(self, attribute_id):
        """
        Sets the attribute_id of this GetDogmaAttributesAttributeIdOk.
        attribute_id integer

        :param attribute_id: The attribute_id of this GetDogmaAttributesAttributeIdOk.
        :type: int
        """
        if attribute_id is None:
            raise ValueError("Invalid value for `attribute_id`, must not be `None`")

        self._attribute_id = attribute_id

    @property
    def default_value(self):
        """
        Gets the default_value of this GetDogmaAttributesAttributeIdOk.
        default_value number

        :return: The default_value of this GetDogmaAttributesAttributeIdOk.
        :rtype: float
        """
        return self._default_value

    @default_value.setter
    def default_value(self, default_value):
        """
        Sets the default_value of this GetDogmaAttributesAttributeIdOk.
        default_value number

        :param default_value: The default_value of this GetDogmaAttributesAttributeIdOk.
        :type: float
        """

        self._default_value = default_value

    @property
    def description(self):
        """
        Gets the description of this GetDogmaAttributesAttributeIdOk.
        description string

        :return: The description of this GetDogmaAttributesAttributeIdOk.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """
        Sets the description of this GetDogmaAttributesAttributeIdOk.
        description string

        :param description: The description of this GetDogmaAttributesAttributeIdOk.
        :type: str
        """

        self._description = description

    @property
    def display_name(self):
        """
        Gets the display_name of this GetDogmaAttributesAttributeIdOk.
        display_name string

        :return: The display_name of this GetDogmaAttributesAttributeIdOk.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """
        Sets the display_name of this GetDogmaAttributesAttributeIdOk.
        display_name string

        :param display_name: The display_name of this GetDogmaAttributesAttributeIdOk.
        :type: str
        """

        self._display_name = display_name

    @property
    def high_is_good(self):
        """
        Gets the high_is_good of this GetDogmaAttributesAttributeIdOk.
        high_is_good boolean

        :return: The high_is_good of this GetDogmaAttributesAttributeIdOk.
        :rtype: bool
        """
        return self._high_is_good

    @high_is_good.setter
    def high_is_good(self, high_is_good):
        """
        Sets the high_is_good of this GetDogmaAttributesAttributeIdOk.
        high_is_good boolean

        :param high_is_good: The high_is_good of this GetDogmaAttributesAttributeIdOk.
        :type: bool
        """

        self._high_is_good = high_is_good

    @property
    def icon_id(self):
        """
        Gets the icon_id of this GetDogmaAttributesAttributeIdOk.
        icon_id integer

        :return: The icon_id of this GetDogmaAttributesAttributeIdOk.
        :rtype: int
        """
        return self._icon_id

    @icon_id.setter
    def icon_id(self, icon_id):
        """
        Sets the icon_id of this GetDogmaAttributesAttributeIdOk.
        icon_id integer

        :param icon_id: The icon_id of this GetDogmaAttributesAttributeIdOk.
        :type: int
        """

        self._icon_id = icon_id

    @property
    def name(self):
        """
        Gets the name of this GetDogmaAttributesAttributeIdOk.
        name string

        :return: The name of this GetDogmaAttributesAttributeIdOk.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """
        Sets the name of this GetDogmaAttributesAttributeIdOk.
        name string

        :param name: The name of this GetDogmaAttributesAttributeIdOk.
        :type: str
        """

        self._name = name

    @property
    def published(self):
        """
        Gets the published of this GetDogmaAttributesAttributeIdOk.
        published boolean

        :return: The published of this GetDogmaAttributesAttributeIdOk.
        :rtype: bool
        """
        return self._published

    @published.setter
    def published(self, published):
        """
        Sets the published of this GetDogmaAttributesAttributeIdOk.
        published boolean

        :param published: The published of this GetDogmaAttributesAttributeIdOk.
        :type: bool
        """

        self._published = published

    @property
    def stackable(self):
        """
        Gets the stackable of this GetDogmaAttributesAttributeIdOk.
        stackable boolean

        :return: The stackable of this GetDogmaAttributesAttributeIdOk.
        :rtype: bool
        """
        return self._stackable

    @stackable.setter
    def stackable(self, stackable):
        """
        Sets the stackable of this GetDogmaAttributesAttributeIdOk.
        stackable boolean

        :param stackable: The stackable of this GetDogmaAttributesAttributeIdOk.
        :type: bool
        """

        self._stackable = stackable

    @property
    def unit_id(self):
        """
        Gets the unit_id of this GetDogmaAttributesAttributeIdOk.
        unit_id integer

        :return: The unit_id of this GetDogmaAttributesAttributeIdOk.
        :rtype: int
        """
        return self._unit_id

    @unit_id.setter
    def unit_id(self, unit_id):
        """
        Sets the unit_id of this GetDogmaAttributesAttributeIdOk.
        unit_id integer

        :param unit_id: The unit_id of this GetDogmaAttributesAttributeIdOk.
        :type: int
        """

        self._unit_id = unit_id

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        if not isinstance(other, GetDogmaAttributesAttributeIdOk):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
